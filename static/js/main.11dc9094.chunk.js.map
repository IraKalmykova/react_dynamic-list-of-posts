{"version":3,"sources":["components/User.js","components/Comment.js","components/CommentList.js","components/Post.js","components/PostList.js","api.js","App.js","index.js"],"names":["User","_ref","user","post","react_default","a","createElement","className","name","email","address","city","street","suite","title","body","Comment","comment","CommentList","state","isShowingComments","showComments","_this","setState","prevState","comments","this","props","onClick","length","map","components_Comment","key","id","React","Component","Post","postItems","components_User","components_CommentList","postId","PostList","posts","filterBy","value","onInput","type","placeholder","components_Post","BASE_URL","getPosts","fetch","concat","then","res","json","getUsers","getComments","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onLoad","isDisabled","loadData","isLoaded","asyncToGenerator","regenerator_default","mark","_callee","_ref2","_ref3","users","wrap","_context","prev","next","Promise","all","sent","slicedToArray","getPostsWithUsersAndComments","shownPosts","stop","event","target","toLowerCase","copiedPosts","filter","includes","_this2","objectSpread","convertFirstLetterToUpperCase","find","userId","str","toUpperCase","slice","components_PostList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.11dc9094.chunk.js","sourcesContent":["import React from \"react\";\nimport '../App.css';\n\nconst User = ({user, post}) => (\n  <div>\n    <div className=\"user-name\">{user.name}</div>\n    <div className=\"user-email\">{user.email}</div>\n    <div className=\"user-address\">{user.address.city}, {user.address.street}, {user.address.suite}</div>\n    <h2 className=\"post-title\">{post.title}</h2>\n    <div className=\"post-body\">{post.body}</div>\n  </div>\n)\n\nexport default User;","import React from \"react\";\nimport '../App.css';\n\nconst Comment = ({comment}) => (\n  <div className=\"comment\">\n    <span className=\"comment-email\">{comment.email} </span>\n    <span className=\"comment-body\">{comment.body}</span>\n  </div>\n)\n\nexport default Comment;","import React from \"react\";\nimport '../App.css';\nimport Comment from './Comment'\n\nclass CommentList extends React.Component {\n  state = {\n    isShowingComments: false,\n  }\n\n  showComments = () => {\n    this.setState((prevState) => ({\n      isShowingComments: !prevState.isShowingComments\n    }))\n  }\n\n  render() {\n    const {comments} = this.props;\n    const {isShowingComments} = this.state;\n\n    return (\n      <div className=\"comment-list\">\n          <button\n            className=\"comment-btn\"\n            onClick={this.showComments}\n          >\n              {comments.length} comments\n          </button>\n          <div className={isShowingComments ? \"show-comments\" : \"hide-comments\"}>\n              {comments.map(comment => (\n                <Comment\n                  key={comment.id}\n                  comment={comment}\n                />\n              ))}\n          </div>\n      </div>\n    )\n  }\n}\n\n\nexport default CommentList;","import React from 'react';\nimport '../App.css';\nimport User from \"./User\";\nimport CommentList from \"./CommentList\";\n\nconst Post = ({post, postItems}) => (\n  <div>\n    <User\n      post={post}\n      user={post.user}\n    />\n\n    <CommentList\n      comments={post.comments}\n      postId={post.id}\n      postItems={postItems}\n    />\n  </div>\n)\n\nexport default Post;","import React from 'react';\nimport '../App.css';\nimport Post from './Post';\n\nconst PostList = ({posts, filterBy, value}) => (\n  <div className=\"post-list\">\n    <label className=\"label\">\n      Filter by &nbsp;\n      <input\n        onInput={filterBy}\n        className=\"input\"\n        type=\"text\"\n        placeholder=\"Enter text\"\n        value={value}\n      />\n    </label>\n    <div>\n      {posts.map(post => (\n        <div\n          className=\"post\"\n          key={post.id}\n        >\n          <Post\n            post={post}\n          />\n        </div>\n      ))}\n    </div>\n  </div>\n)\n\nexport default PostList;","const BASE_URL = 'https://jsonplaceholder.typicode.com';\r\n\r\nexport  const getPosts = () => {\r\n  return fetch(`${BASE_URL}/posts`)\r\n    .then(res => res.json());\r\n}\r\n\r\nexport  const getUsers = () => {\r\n  return fetch(`${BASE_URL}/users`)\r\n    .then(res => res.json());\r\n}\r\n\r\nexport  const getComments = () => {\r\n  return fetch(`${BASE_URL}/comments`)\r\n    .then(res => res.json());\r\n}","import React from 'react';\nimport './App.css';\nimport PostList from './components/PostList';\nimport {getPosts, getUsers, getComments} from \"./api\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      posts: {},\n      shownPosts: {},\n      isLoaded: false,\n      isDisabled: false,\n      value: ''\n    };\n  }\n\n  onLoad = () => {\n    this.setState({isDisabled: true});\n    this.loadData().then(() => {\n      this.setState({isLoaded: true})\n    });\n\n  }\n\n  loadData = async() => {\n    const [posts, users, comments] = await Promise.all([\n      getPosts(),\n      getUsers(),\n      getComments()\n    ])\n\n    this.setState({\n      posts: this.getPostsWithUsersAndComments(posts, users, comments),\n      shownPosts: this.getPostsWithUsersAndComments(posts, users, comments)\n    });\n  }\n\n  getPostsWithUsersAndComments(posts, users, comments) {\n    return posts.map(post => ({\n      ...post,\n      title: this.convertFirstLetterToUpperCase(post.title),\n      body: this.convertFirstLetterToUpperCase(post.body),\n      user: users.find(user => user.id === post.userId),\n      comments: comments.filter(comment => comment.postId === post.id)\n    }))\n  }\n\n  convertFirstLetterToUpperCase(str) {\n    return str[0].toUpperCase() + str.slice(1);\n  }\n\n  filterBy = event => {\n    const value = event.target.value.toLowerCase();\n    const copiedPosts = this.state.posts.filter(post => (\n      post.title.toLowerCase().includes(value) ||\n      post.body.toLowerCase().includes(value)\n    ));\n\n    this.setState({\n      value: event.target.value,\n      shownPosts: copiedPosts\n    })\n  }\n\n  render() {\n    return (\n      <section className=\"section-wrap\">\n        <h1>React dynamic list of posts</h1>\n        {this.state.isLoaded ? (\n            <PostList\n              posts={this.state.shownPosts}\n              filterBy={this.filterBy}\n              value={this.state.value}\n            />\n          ): (\n          <button\n            className=\"btn-load\"\n            onClick={this.onLoad}\n          >\n            {this.state.isDisabled ? \"Loading...\" : \"Load\"}\n          </button>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}